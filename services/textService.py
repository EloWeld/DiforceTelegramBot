import loguru
from loader import MDB

savedTexts = {}


class TextsMetaClass(type):

    __defaultTexts = dict(
        # Start
        StartMessage="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Diforce!",
        # Menu buttons
        CatalogButton="üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥",
        CartButton="üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞",
        OptPricesFileButton="–î–ª—è –æ–ø—Ç–æ–≤–∏–∫–æ–≤",
        OptFileMessage="–î–ª—è –æ–ø—Ç–æ–≤–∏–∫–æ–≤ –≤–æ—Ç —Ñ–∞–π–ª",
        # Catalog
        CatalogMessage="üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤",
        CategoryMessage="Ô∏èÔ∏è‚è∫Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è {category.GroupName}\n"
                        "*Ô∏è‚É£ –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π: {subcategories_count}\n"
                        "üí† –¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {category_goods_count}",
        SearchButton="üîé –ü–æ–∏—Å–∫",
        CategoryGoodsMessage="üí† –¢–æ–≤–∞—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.GroupName} ({goods_count})",
        CategoryGoodsButton="üõí –¢–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ üõí",

        # Good in catalog
        GoodCard="""
‚è∫Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <b>{GroupName}</b>
üîñ –ê—Ä—Ç–∏–∫—É–ª: <b>{ProductArt}</b>

üí† –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: <b>{ProductName}</b>
üóÑÔ∏è –°–∫–ª–∞–¥: <b>{StoreName}</b>
üé® –¶–≤–µ—Ç: <b>{ColorEmoji} {ColorName}</b>

üí∞ –¶–µ–Ω–∞: <b>{Price} ‚ÇΩ</b>

üìú –û–ø–∏—Å–∞–Ω–∏–µ: 
<b>{ProductDescription}</b>
""",
        # Good Buttons
        AddToCartButton="üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É",
        FoundCheaperButton="üìâ –ù–∞—à—ë–ª –¥–µ—à–µ–≤–ª–µ",
        StoreQuantsButton="üì¶ –ù–∞–ª–∏—á–∏–µ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö",

        # Good suboptions
        AddedToCart="‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É!",
        YourRequestWasSentMessage="–í–∞—à–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–ø–∞–≤–ª–µ–Ω–æ –Ω–∞—à–∏–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º! –°–∫–æ—Ä–æ –º—ã –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏–º üòä",
        QuantityInStores="""
–ù–∞–ª–∏—á–∏–µ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö
{store_text}
""",
        QuantityInStoresFormat="<code>{store_name:24} ‚ûñ‚ûñ‚ûñ {quantity} —à—Ç.</code> ",
        # FoundCheaper
        FoundCheaperMessage="üõí –ù–∞—à–ª–∏ –¥–µ—à–µ–≤–ª–µ?\nüéÅ –ú—ã –ø—Ä–µ–¥–ª–æ–∂–∏–º —Ü–µ–Ω—É –µ—â—ë –ª—É—á—à–µ. \n‚ö†Ô∏è –ó–∞–∫—Ä–µ–ø–∏ —Ñ–æ—Ç–æ –∏–ª–∏ —Å—Å—ã–ª–∫—É –ø—Ä–æ–¥–∞–≤—Ü–∞.\n",
        FoundCheaperAdminMessage="""
–ü–æ–∫—É–ø–∞—Ç–µ–ª—å <a href='tg://user?id={user.id}>{user.username}|{user.fullname}</a> –Ω–∞—à—ë–ª —Ç–æ–≤–∞—Ä <code>{good.ProductID}</code> –¥–µ—à–µ–≤–ª–µ

üë§ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: <b>{comment}</b>""",

        # Cart
        YourCartMessage="üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞\n–ò—Ç–æ–≥–æ: <b>{cart_price} ‚ÇΩ</b>\n\n{cart_text}",
        YourCartIsEmpty="üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!",
        CartItemTextFormat="<code>{ProductName:23} ‚ûñ‚ûñ‚ûñ {Quantity} —à—Ç.</code>",
        CartItemMessage="\n\n–í –∫–æ—Ä–∑–∏–Ω–µ: {Quantity}",
        MakeAnOrderButton="üõéÔ∏è –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
        ClickRemovePopup="–ß—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã - –Ω–∞–∂–º–∏—Ç–µ \"{btn}\"",
        CartItemRemoved="‚úÖ–¢–æ–≤–∞—Ä —É–±—Ä–∞–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã",
        DecrementButton="-1",
        IncrementButton="+1",
        RemoveButton="üóëÔ∏è",
        
        # Profile
        Profile = "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
        YourOrderHistory="üìú –í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤",
        YourOrdersHistoryIsEmpty="üìú –í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –ø—É—Å—Ç–∞ üí®",

        # Admin
        AdminMenuButton="üëë –ê–¥–º–∏–Ω–∫–∞",
        AdminMenuMessage="–ê–¥–º–∏–Ω-–º–µ–Ω—é",
        BroadcastButton = "–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π",
        BotUsersButton = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞",
        OrdersHistory="–ò—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤",
        
        EnterBroadcastContent="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏\n\n(–ï—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–∏—Ç—å —Ñ–æ—Ç–æ)",
        CancelBroadcastButton="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É",
        BroadcastLinksMessage="–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ + URL | –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ + URL\n–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ + URL\n\n–ü—Ä–æ–±–µ–ª—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!",
        AdminConfirmBroadcastMessage="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É?",
        PreviewBroadcastMessage="‚¨áÔ∏è –ù–∏–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å—Å—ã–ª–∫–∏",
        BroadcastDone="–†–∞—Å—Å—ã–ª–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.",
        BroadcastCanceled="–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.",
        
        BotUsersMessage="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞",
        BotUsersDefaultButton="–û–±—ã—á–Ω—ã–µ",
        BotUsersOpt1Button="–û–ø—Ç–ú–µ–ª–∫–∏–π",
        BotUsersOpt2Button="–û–ø—Ç–°—Ä–µ–¥–Ω–∏–π",
        BotUsersOpt3Button="–û–ø—Ç–ö—Ä—É–ø–Ω—ã–π",
        BotUsersAdminsButton="–ê–¥–º–∏–Ω—ã",
        EmptyList="üï∏Ô∏è –ü—É—Å—Ç–æ üï∏Ô∏è",
        UserInfoAdminFormat="""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.fullname}
        
–Æ–∑–µ—Ä–Ω–µ–π–º: @{user.username}
–†–æ–ª–∏: {user.roles}
–û–ø—Ç: {user.opt}

""",

        # Search
        EnterSearchQuery="üîé –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞",
        CancelSearchButton="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        SearchResults="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ ({found_count})",
        SpecifyCartQuantity="‚úèÔ∏è –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ",
        IncorrectQuantity="‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ",
        
        # Other
        QuitButton="üö™ –í—ã—Ö–æ–¥",
        Cancel="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        HideButton="‚ûñ–°–∫—Ä—ã—Ç—å‚ûñ",
        BackButton="‚óÄÔ∏è –ù–∞–∑–∞–¥",
    )
    
    def rus(cls, key):
        if key == "SmallOpt":
            return "–ú–µ–ª–∫–∏–π –æ–ø—Ç"
        if key == "MiddleOpt":
            return "–°—Ä–µ–¥–Ω–∏–π –æ–ø—Ç"
        if key == "LargeOpt":
            return "–ö—Ä—É–ø–Ω—ã–π –æ–ø—Ç"
        if key == "admin":
            return "–ê–¥–º–∏–Ω"
        if key == "user":
            return "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        if key == "None":
            return "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        else:
            return key

    def __getattr__(cls, key):
        doc = MDB.Settings.find_one(dict(id="Texts"))
        if not doc:
            doc = MDB.Settings.insert_one(dict(id="Texts"))

        if key in doc:
            loguru.logger.success(f"[TEXTS]: Saved text for key: {key}")
            return doc[key]
        elif key in cls.__defaultTexts:
            t_value = cls.__defaultTexts[key]
            MDB.Settings.update_one(
                dict(id="Texts"), {"$set": {key: t_value}})
            loguru.logger.success(f"[TEXTS]: Saved text for key: {key}")
            return t_value
        elif key == "ALL":
            return cls.__defaultTexts
        else:
            loguru.logger.error(
                f"[TEXTS]: Can't found default text for key \"{key}\"")

        raise AttributeError(key)
    
    def __setitem__(cls, key, value):
        MDB.Settings.update_one(dict(id="Texts"), {"$set": {key: value}})


    def __str__(cls):
        return f'Text {cls.__name__}'


class Texts(metaclass=TextsMetaClass):
    pass
